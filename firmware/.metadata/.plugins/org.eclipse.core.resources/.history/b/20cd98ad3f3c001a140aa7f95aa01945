#include "user_io.h"
#include "keycodes.h"

// mouse position storage for ps2 and minimig rate limitation
#define X 0
#define Y 1
#define MOUSE_FREQ 20   // 20 ms -> 50hz
static int16_t mouse_pos[2] = { 0, 0};
static uint8_t mouse_flags = 0;


struct mouse_cmd {
       uint8_t cmd;
       int8_t x;
       int8_t y;
       uint8_t b;
   } __attribute__((packed));

void user_io_mouse(unsigned char b, char x, char y)
{
	// send mouse data as minimig expects it
	struct mouse_cmd;

    mouse_pos[X] += x;
    mouse_pos[Y] += y;
    mouse_flags |= 0x80 | (b&3);

	spi_uio_cmd_cont(UIO_MOUSE);

	// ----- X axis -------
	if(mouse_pos[X] < -128) {
		 mouse_cmd.x = -128;
	  mouse_pos[X] += 128;
	} else if(mouse_pos[X] > 127) {
	  mouse_cmd.x = 127;
	  mouse_pos[X] -= 127;
	} else {
      mouse_cmd.x = mouse_pos[X];
	  mouse_pos[X] = 0;
	}

	// ----- Y axis -------
	if(mouse_pos[Y] < -128) {
		 mouse_cmd.y = -128;
	  mouse_pos[Y] += 128;
	} else if(mouse_pos[Y] > 127) {
		mouse_cmd.y = 127;
	  mouse_pos[Y] -= 127;
	} else {
		mouse_cmd.y = mouse_pos[Y];
	  mouse_pos[Y] = 0;
	}

	mouse_cmd.flags = mouse_flags & 0x03;

}

void user_io_keyboard(void)
{

}


